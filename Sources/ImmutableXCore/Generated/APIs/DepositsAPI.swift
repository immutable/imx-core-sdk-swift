//
// DepositsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DepositsAPI {

    /**
     Get details of a deposit with the given ID
     
     - parameter id: (path) Deposit ID 
     - returns: Deposit
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getDeposit(id: String) async throws -> Deposit {
        let requestBuilder = getDepositWithRequestBuilder(id: id)
        let requestTask = requestBuilder.requestTask
        return try await withTaskCancellationHandler {
            try Task.checkCancellation()
            return try await withCheckedThrowingContinuation { continuation in
                guard !Task.isCancelled else {
                  continuation.resume(throwing: CancellationError())
                  return
                }

                requestBuilder.execute { result in
                    switch result {
                    case let .success(response):
                        continuation.resume(returning: response.body)
                    case let .failure(error):
                        continuation.resume(throwing: error)
                    }
                }
            }
        } onCancel: {
            requestTask.cancel()
        }
    }

    /**
     Get details of a deposit with the given ID
     - GET /v1/deposits/{id}
     - Get details of a deposit with the given ID
     - parameter id: (path) Deposit ID 
     - returns: RequestBuilder<Deposit> 
     */
    open class func getDepositWithRequestBuilder(id: String) -> RequestBuilder<Deposit> {
        var localVariablePath = "/v1/deposits/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Deposit>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Gets details of a signable deposit
     
     - parameter getSignableDepositRequest: (body) Get details of signable deposit 
     - returns: GetSignableDepositResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getSignableDeposit(getSignableDepositRequest: GetSignableDepositRequest) async throws -> GetSignableDepositResponse {
        let requestBuilder = getSignableDepositWithRequestBuilder(getSignableDepositRequest: getSignableDepositRequest)
        let requestTask = requestBuilder.requestTask
        return try await withTaskCancellationHandler {
            try Task.checkCancellation()
            return try await withCheckedThrowingContinuation { continuation in
                guard !Task.isCancelled else {
                  continuation.resume(throwing: CancellationError())
                  return
                }

                requestBuilder.execute { result in
                    switch result {
                    case let .success(response):
                        continuation.resume(returning: response.body)
                    case let .failure(error):
                        continuation.resume(throwing: error)
                    }
                }
            }
        } onCancel: {
            requestTask.cancel()
        }
    }

    /**
     Gets details of a signable deposit
     - POST /v1/signable-deposit-details
     - Gets details of a signable deposit
     - parameter getSignableDepositRequest: (body) Get details of signable deposit 
     - returns: RequestBuilder<GetSignableDepositResponse> 
     */
    open class func getSignableDepositWithRequestBuilder(getSignableDepositRequest: GetSignableDepositRequest) -> RequestBuilder<GetSignableDepositResponse> {
        let localVariablePath = "/v1/signable-deposit-details"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: getSignableDepositRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetSignableDepositResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get a list of deposits
     
     - parameter pageSize: (query) Page size of the result (optional)
     - parameter cursor: (query) Cursor (optional)
     - parameter orderBy: (query) Property to sort by (optional)
     - parameter direction: (query) Direction to sort (asc/desc) (optional)
     - parameter user: (query) Ethereum address of the user who submitted this deposit (optional)
     - parameter status: (query) Status of this deposit (optional)
     - parameter updatedMinTimestamp: (query) Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)
     - parameter updatedMaxTimestamp: (query) Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)
     - parameter tokenType: (query) Token type of the deposited asset (optional)
     - parameter tokenId: (query) ERC721 Token ID of the minted asset (optional)
     - parameter assetId: (query) Internal IMX ID of the minted asset (optional)
     - parameter tokenAddress: (query) Token address of the deposited asset (optional)
     - parameter tokenName: (query) Token name of the deposited asset (optional)
     - parameter minQuantity: (query) Min quantity for the deposited asset (optional)
     - parameter maxQuantity: (query) Max quantity for the deposited asset (optional)
     - parameter metadata: (query) JSON-encoded metadata filters for the deposited asset (optional)
     - returns: ListDepositsResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func listDeposits(pageSize: Int? = nil, cursor: String? = nil, orderBy: String? = nil, direction: String? = nil, user: String? = nil, status: String? = nil, updatedMinTimestamp: String? = nil, updatedMaxTimestamp: String? = nil, tokenType: String? = nil, tokenId: String? = nil, assetId: String? = nil, tokenAddress: String? = nil, tokenName: String? = nil, minQuantity: String? = nil, maxQuantity: String? = nil, metadata: String? = nil) async throws -> ListDepositsResponse {
        let requestBuilder = listDepositsWithRequestBuilder(pageSize: pageSize, cursor: cursor, orderBy: orderBy, direction: direction, user: user, status: status, updatedMinTimestamp: updatedMinTimestamp, updatedMaxTimestamp: updatedMaxTimestamp, tokenType: tokenType, tokenId: tokenId, assetId: assetId, tokenAddress: tokenAddress, tokenName: tokenName, minQuantity: minQuantity, maxQuantity: maxQuantity, metadata: metadata)
        let requestTask = requestBuilder.requestTask
        return try await withTaskCancellationHandler {
            try Task.checkCancellation()
            return try await withCheckedThrowingContinuation { continuation in
                guard !Task.isCancelled else {
                  continuation.resume(throwing: CancellationError())
                  return
                }

                requestBuilder.execute { result in
                    switch result {
                    case let .success(response):
                        continuation.resume(returning: response.body)
                    case let .failure(error):
                        continuation.resume(throwing: error)
                    }
                }
            }
        } onCancel: {
            requestTask.cancel()
        }
    }

    /**
     Get a list of deposits
     - GET /v1/deposits
     - Get a list of deposits
     - parameter pageSize: (query) Page size of the result (optional)
     - parameter cursor: (query) Cursor (optional)
     - parameter orderBy: (query) Property to sort by (optional)
     - parameter direction: (query) Direction to sort (asc/desc) (optional)
     - parameter user: (query) Ethereum address of the user who submitted this deposit (optional)
     - parameter status: (query) Status of this deposit (optional)
     - parameter updatedMinTimestamp: (query) Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)
     - parameter updatedMaxTimestamp: (query) Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)
     - parameter tokenType: (query) Token type of the deposited asset (optional)
     - parameter tokenId: (query) ERC721 Token ID of the minted asset (optional)
     - parameter assetId: (query) Internal IMX ID of the minted asset (optional)
     - parameter tokenAddress: (query) Token address of the deposited asset (optional)
     - parameter tokenName: (query) Token name of the deposited asset (optional)
     - parameter minQuantity: (query) Min quantity for the deposited asset (optional)
     - parameter maxQuantity: (query) Max quantity for the deposited asset (optional)
     - parameter metadata: (query) JSON-encoded metadata filters for the deposited asset (optional)
     - returns: RequestBuilder<ListDepositsResponse> 
     */
    open class func listDepositsWithRequestBuilder(pageSize: Int? = nil, cursor: String? = nil, orderBy: String? = nil, direction: String? = nil, user: String? = nil, status: String? = nil, updatedMinTimestamp: String? = nil, updatedMaxTimestamp: String? = nil, tokenType: String? = nil, tokenId: String? = nil, assetId: String? = nil, tokenAddress: String? = nil, tokenName: String? = nil, minQuantity: String? = nil, maxQuantity: String? = nil, metadata: String? = nil) -> RequestBuilder<ListDepositsResponse> {
        let localVariablePath = "/v1/deposits"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page_size": (wrappedValue: pageSize?.encodeToJSON(), isExplode: false),
            "cursor": (wrappedValue: cursor?.encodeToJSON(), isExplode: false),
            "order_by": (wrappedValue: orderBy?.encodeToJSON(), isExplode: false),
            "direction": (wrappedValue: direction?.encodeToJSON(), isExplode: false),
            "user": (wrappedValue: user?.encodeToJSON(), isExplode: false),
            "status": (wrappedValue: status?.encodeToJSON(), isExplode: false),
            "updated_min_timestamp": (wrappedValue: updatedMinTimestamp?.encodeToJSON(), isExplode: false),
            "updated_max_timestamp": (wrappedValue: updatedMaxTimestamp?.encodeToJSON(), isExplode: false),
            "token_type": (wrappedValue: tokenType?.encodeToJSON(), isExplode: false),
            "token_id": (wrappedValue: tokenId?.encodeToJSON(), isExplode: false),
            "asset_id": (wrappedValue: assetId?.encodeToJSON(), isExplode: false),
            "token_address": (wrappedValue: tokenAddress?.encodeToJSON(), isExplode: false),
            "token_name": (wrappedValue: tokenName?.encodeToJSON(), isExplode: false),
            "min_quantity": (wrappedValue: minQuantity?.encodeToJSON(), isExplode: false),
            "max_quantity": (wrappedValue: maxQuantity?.encodeToJSON(), isExplode: false),
            "metadata": (wrappedValue: metadata?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListDepositsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
