//
// MintableTokenDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MintableTokenDetails: Codable, Hashable {

    /** Blueprint of this token */
    public private(set) var blueprint: String
    /** ID provided by the client for this token */
    public private(set) var clientTokenId: String
    /** IMX Id of this token */
    public private(set) var tokenId: String

    public init(blueprint: String, clientTokenId: String, tokenId: String) {
        self.blueprint = blueprint
        self.clientTokenId = clientTokenId
        self.tokenId = tokenId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case blueprint
        case clientTokenId = "client_token_id"
        case tokenId = "token_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(blueprint, forKey: .blueprint)
        try container.encode(clientTokenId, forKey: .clientTokenId)
        try container.encode(tokenId, forKey: .tokenId)
    }
}

