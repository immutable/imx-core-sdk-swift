//
// Fee.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Fee: Codable, Hashable {

    /** Wallet address */
    public private(set) var address: String
    /** The percentage of fee */
    public private(set) var percentage: Double
    /** Type of fee. Examples: `royalty`, `maker`, `taker` or `protocol` */
    public private(set) var type: String

    public init(address: String, percentage: Double, type: String) {
        self.address = address
        self.percentage = percentage
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case address
        case percentage
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(address, forKey: .address)
        try container.encode(percentage, forKey: .percentage)
        try container.encode(type, forKey: .type)
    }
}

