//
// Project.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Project: Codable, Hashable {

    /** The current period expiry date for collection limit */
    public private(set) var collectionLimitExpiresAt: String
    /** The total monthly collection limit */
    public private(set) var collectionMonthlyLimit: Int
    /** The number of collection remaining in the current period */
    public private(set) var collectionRemaining: Int
    /** The company name */
    public private(set) var companyName: String
    /** The project contact email */
    public private(set) var contactEmail: String
    /** The project ID */
    public private(set) var id: Int
    /** The current period expiry date for mint operation limit */
    public private(set) var mintLimitExpiresAt: String
    /** The total monthly mint operation limit */
    public private(set) var mintMonthlyLimit: Int
    /** The number of mint operation remaining in the current period */
    public private(set) var mintRemaining: Int
    /** The project name */
    public private(set) var name: String

    public init(collectionLimitExpiresAt: String, collectionMonthlyLimit: Int, collectionRemaining: Int, companyName: String, contactEmail: String, id: Int, mintLimitExpiresAt: String, mintMonthlyLimit: Int, mintRemaining: Int, name: String) {
        self.collectionLimitExpiresAt = collectionLimitExpiresAt
        self.collectionMonthlyLimit = collectionMonthlyLimit
        self.collectionRemaining = collectionRemaining
        self.companyName = companyName
        self.contactEmail = contactEmail
        self.id = id
        self.mintLimitExpiresAt = mintLimitExpiresAt
        self.mintMonthlyLimit = mintMonthlyLimit
        self.mintRemaining = mintRemaining
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case collectionLimitExpiresAt = "collection_limit_expires_at"
        case collectionMonthlyLimit = "collection_monthly_limit"
        case collectionRemaining = "collection_remaining"
        case companyName = "company_name"
        case contactEmail = "contact_email"
        case id
        case mintLimitExpiresAt = "mint_limit_expires_at"
        case mintMonthlyLimit = "mint_monthly_limit"
        case mintRemaining = "mint_remaining"
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(collectionLimitExpiresAt, forKey: .collectionLimitExpiresAt)
        try container.encode(collectionMonthlyLimit, forKey: .collectionMonthlyLimit)
        try container.encode(collectionRemaining, forKey: .collectionRemaining)
        try container.encode(companyName, forKey: .companyName)
        try container.encode(contactEmail, forKey: .contactEmail)
        try container.encode(id, forKey: .id)
        try container.encode(mintLimitExpiresAt, forKey: .mintLimitExpiresAt)
        try container.encode(mintMonthlyLimit, forKey: .mintMonthlyLimit)
        try container.encode(mintRemaining, forKey: .mintRemaining)
        try container.encode(name, forKey: .name)
    }
}

