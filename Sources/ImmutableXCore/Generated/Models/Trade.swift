//
// Trade.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Trade: Codable, Hashable {

    public private(set) var a: TradeSide
    public private(set) var b: TradeSide
    /** Status of this trade */
    public private(set) var status: String
    /** Time this trade occurred */
    public private(set) var timestamp: String?
    /** Sequential ID of this trade within Immutable X */
    public private(set) var transactionId: Int

    public init(a: TradeSide, b: TradeSide, status: String, timestamp: String?, transactionId: Int) {
        self.a = a
        self.b = b
        self.status = status
        self.timestamp = timestamp
        self.transactionId = transactionId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case a
        case b
        case status
        case timestamp
        case transactionId = "transaction_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(a, forKey: .a)
        try container.encode(b, forKey: .b)
        try container.encode(status, forKey: .status)
        try container.encode(timestamp, forKey: .timestamp)
        try container.encode(transactionId, forKey: .transactionId)
    }
}

