//
// UpdateCollectionRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct UpdateCollectionRequest: Codable, Hashable {

    /** URL of the tile image for this collection */
    public private(set) var collectionImageUrl: String?
    /** Description of the collection */
    public private(set) var description: String?
    /** URL of the icon for this collection */
    public private(set) var iconUrl: String?
    /** URL of the metadata for this collection */
    public private(set) var metadataApiUrl: String?
    /** Name of the collection */
    public private(set) var name: String?

    public init(collectionImageUrl: String? = nil, description: String? = nil, iconUrl: String? = nil, metadataApiUrl: String? = nil, name: String? = nil) {
        self.collectionImageUrl = collectionImageUrl
        self.description = description
        self.iconUrl = iconUrl
        self.metadataApiUrl = metadataApiUrl
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case collectionImageUrl = "collection_image_url"
        case description
        case iconUrl = "icon_url"
        case metadataApiUrl = "metadata_api_url"
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(collectionImageUrl, forKey: .collectionImageUrl)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(iconUrl, forKey: .iconUrl)
        try container.encodeIfPresent(metadataApiUrl, forKey: .metadataApiUrl)
        try container.encodeIfPresent(name, forKey: .name)
    }
}

