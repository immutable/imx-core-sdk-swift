//
// GetSignableTransferResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GetSignableTransferResponse: Codable, Hashable {

    /** Sender of the transfer */
    public private(set) var senderStarkKey: String
    /** Message to sign with L1 wallet to confirm transfer request */
    public private(set) var signableMessage: String
    /** List of transfer responses without the sender stark key */
    public private(set) var signableResponses: [SignableTransferResponseDetails]

    public init(senderStarkKey: String, signableMessage: String, signableResponses: [SignableTransferResponseDetails]) {
        self.senderStarkKey = senderStarkKey
        self.signableMessage = signableMessage
        self.signableResponses = signableResponses
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case senderStarkKey = "sender_stark_key"
        case signableMessage = "signable_message"
        case signableResponses = "signable_responses"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(senderStarkKey, forKey: .senderStarkKey)
        try container.encode(signableMessage, forKey: .signableMessage)
        try container.encode(signableResponses, forKey: .signableResponses)
    }
}

